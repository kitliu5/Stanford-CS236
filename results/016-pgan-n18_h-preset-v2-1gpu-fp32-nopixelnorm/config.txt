D = {'func': 'networks.D_paper'}
D_loss = {'func': 'loss.D_wgangp_acgan'}
D_opt = {'beta1': 0.0, 'beta2': 0.99, 'epsilon': 1e-08}
EasyDict = <class 'config.EasyDict'>
G = {'func': 'networks.G_paper', 'use_pixelnorm': False}
G_loss = {'func': 'loss.G_wgan_acgan'}
G_opt = {'beta1': 0.0, 'beta2': 0.99, 'epsilon': 1e-08}
data_dir = E:/progressive_growing_of_gans-master/n16
dataset = {'tfrecord_dir': 'n18'}
desc = pgan-n18_h-preset-v2-1gpu-fp32-nopixelnorm
env = {'TF_CPP_MIN_LOG_LEVEL': '1'}
grid = {'size': '1080p', 'layout': 'random'}
num_gpus = 1
random_seed = 1000
result_dir = E:/progressive_growing_of_gans-master/results
sched = {'minibatch_base': 4, 'minibatch_dict': {4: 128, 8: 128, 16: 128, 32: 64, 64: 32, 128: 16, 256: 8, 512: 4}, 'G_lrate_dict': {1024: 0.0015}, 'D_lrate_dict': {1024: 0.0015}, 'max_minibatch_per_gpu': {256: 16, 512: 8, 1024: 4}}
tf_config = {'graph_options.place_pruned_graph': True, 'gpu_options.allow_growth': True}
train = {'func': 'train.train_progressive_gan', 'mirror_augment': False, 'total_kimg': 1200}
